on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      # - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      # - '.github/workflows/**'

jobs:
  # initkube:
    # name: Terraform
    # runs-on: ubuntu-latest
    # environment: production
    # defaults:
      # run:
        # shell: bash

    # steps:
      # - name: Checkout
        # uses: actions/checkout@v2

      # - name: Setup Terraform
        # uses: hashicorp/setup-terraform@v1
        # with:
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Terraform Init
        # run: terraform init

      # - name: Terraform Format
        # run: terraform fmt -check

      # - name: Terraform Plan
        # run: terraform plan

      # - name: Terraform Apply
    # #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        # run: terraform apply -auto-approve

  # pytest:
    # # needs: [flake8-lint]
    # runs-on: ubuntu-latest

    # steps:
    # - uses: actions/checkout@v2
    # - name: Set up Python 3.9
      # uses: actions/setup-python@v2
      # with:
        # python-version: 3.9
    # - name: Install dependencies
      # run: |
        # python -m pip install --upgrade pip
        # pip install pytest
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Test with pytest
      # run: |
        # pytest


  # pylint:
    # # needs: pytest
    # runs-on: ubuntu-latest
    # steps:
    # - uses: actions/checkout@v2
    # - name: Set up Python 3.9
      # uses: actions/setup-python@v2
      # with:
        # python-version: 3.9
    # - name: Install dependencies
      # run: |
        # python -m pip install --upgrade pip
        # pip install pylint 
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with pylint
      # run: |
        # pylint --exit-zero $(ls -R | grep .py$ | xargs)

 #========================ADD build test HERE ===================================
 #========================AND MAY BE BANDIT ===================================

  push_to_registry:
    # needs: pylint
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: runalsh
          password: ${{ secrets.DOCKER_TOKEN }}
     
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: runalsh/py-exam
      
      - name: Build and push Docker imagee
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
