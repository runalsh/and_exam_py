on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
  pull_request:
    branches: [ main ]
jobs:
  deploy_to_google_cloud:
    name: Deploy to Google Cloud Platform
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      # Setup gcloud CLI
      - name: setup gcloud CLI
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          # this is the json key of the service account created on the project
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}  
          export_default_credentials: true
      # Deploy the app using kubernetes (deploy.yml)
      - name: Deploy
        # To run kubectl commands against a cluster created in Cloud Console, 
        # from another computer, or by another member of the project, 
        # you need to generate a kubeconfig entry in your environment.
        # The rolling deployment is the standard default deployment to Kubernetes. 
        # It works by slowly, one by one, replacing pods of the previous version of 
        # your application with pods of the new version without any cluster downtime
        run: |
          gcloud config set compute/region europe-west4
          gcloud config set compute/zone europe-west4-a
          gcloud container clusters get-credentials node-demo-k8s
          envsubst < deploy.yml
          envsubst < deploy.yml | kubectl apply -f -
          kubectl rollout status -w deployment/nodejs-demo-app
          kubectl get all


